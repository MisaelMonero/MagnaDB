//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerTester.ServiceReference5 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DominioVenta", Namespace="http://schemas.datacontract.org/2004/07/SaleDomains")]
    [System.SerializableAttribute()]
    public partial class DominioVenta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CobroActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompraActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConsumidorFinalActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreditoFiscalActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GastosMenoresActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GubernamentalActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NotaCreditoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NotaDebitoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrdenActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PagoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParteFijaComprobantesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PedidoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProveedorInformalActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegimenEspecialActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegistroUnicoIngresoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeConsumidorFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeCreditoFiscalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeGastosMenoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeGubernamentalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeNotaCreditoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeNotaDebitoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeProveedorInformalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeRegimenEspecialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TopeRegistroUnicoIngresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VentaActualField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CobroActual {
            get {
                return this.CobroActualField;
            }
            set {
                if ((this.CobroActualField.Equals(value) != true)) {
                    this.CobroActualField = value;
                    this.RaisePropertyChanged("CobroActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompraActual {
            get {
                return this.CompraActualField;
            }
            set {
                if ((this.CompraActualField.Equals(value) != true)) {
                    this.CompraActualField = value;
                    this.RaisePropertyChanged("CompraActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConsumidorFinalActual {
            get {
                return this.ConsumidorFinalActualField;
            }
            set {
                if ((this.ConsumidorFinalActualField.Equals(value) != true)) {
                    this.ConsumidorFinalActualField = value;
                    this.RaisePropertyChanged("ConsumidorFinalActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreditoFiscalActual {
            get {
                return this.CreditoFiscalActualField;
            }
            set {
                if ((this.CreditoFiscalActualField.Equals(value) != true)) {
                    this.CreditoFiscalActualField = value;
                    this.RaisePropertyChanged("CreditoFiscalActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GastosMenoresActual {
            get {
                return this.GastosMenoresActualField;
            }
            set {
                if ((this.GastosMenoresActualField.Equals(value) != true)) {
                    this.GastosMenoresActualField = value;
                    this.RaisePropertyChanged("GastosMenoresActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GubernamentalActual {
            get {
                return this.GubernamentalActualField;
            }
            set {
                if ((this.GubernamentalActualField.Equals(value) != true)) {
                    this.GubernamentalActualField = value;
                    this.RaisePropertyChanged("GubernamentalActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NotaCreditoActual {
            get {
                return this.NotaCreditoActualField;
            }
            set {
                if ((this.NotaCreditoActualField.Equals(value) != true)) {
                    this.NotaCreditoActualField = value;
                    this.RaisePropertyChanged("NotaCreditoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NotaDebitoActual {
            get {
                return this.NotaDebitoActualField;
            }
            set {
                if ((this.NotaDebitoActualField.Equals(value) != true)) {
                    this.NotaDebitoActualField = value;
                    this.RaisePropertyChanged("NotaDebitoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrdenActual {
            get {
                return this.OrdenActualField;
            }
            set {
                if ((this.OrdenActualField.Equals(value) != true)) {
                    this.OrdenActualField = value;
                    this.RaisePropertyChanged("OrdenActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PagoActual {
            get {
                return this.PagoActualField;
            }
            set {
                if ((this.PagoActualField.Equals(value) != true)) {
                    this.PagoActualField = value;
                    this.RaisePropertyChanged("PagoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParteFijaComprobantes {
            get {
                return this.ParteFijaComprobantesField;
            }
            set {
                if ((object.ReferenceEquals(this.ParteFijaComprobantesField, value) != true)) {
                    this.ParteFijaComprobantesField = value;
                    this.RaisePropertyChanged("ParteFijaComprobantes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PedidoActual {
            get {
                return this.PedidoActualField;
            }
            set {
                if ((this.PedidoActualField.Equals(value) != true)) {
                    this.PedidoActualField = value;
                    this.RaisePropertyChanged("PedidoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProveedorInformalActual {
            get {
                return this.ProveedorInformalActualField;
            }
            set {
                if ((this.ProveedorInformalActualField.Equals(value) != true)) {
                    this.ProveedorInformalActualField = value;
                    this.RaisePropertyChanged("ProveedorInformalActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegimenEspecialActual {
            get {
                return this.RegimenEspecialActualField;
            }
            set {
                if ((this.RegimenEspecialActualField.Equals(value) != true)) {
                    this.RegimenEspecialActualField = value;
                    this.RaisePropertyChanged("RegimenEspecialActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegistroUnicoIngresoActual {
            get {
                return this.RegistroUnicoIngresoActualField;
            }
            set {
                if ((this.RegistroUnicoIngresoActualField.Equals(value) != true)) {
                    this.RegistroUnicoIngresoActualField = value;
                    this.RaisePropertyChanged("RegistroUnicoIngresoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeConsumidorFinal {
            get {
                return this.TopeConsumidorFinalField;
            }
            set {
                if ((this.TopeConsumidorFinalField.Equals(value) != true)) {
                    this.TopeConsumidorFinalField = value;
                    this.RaisePropertyChanged("TopeConsumidorFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeCreditoFiscal {
            get {
                return this.TopeCreditoFiscalField;
            }
            set {
                if ((this.TopeCreditoFiscalField.Equals(value) != true)) {
                    this.TopeCreditoFiscalField = value;
                    this.RaisePropertyChanged("TopeCreditoFiscal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeGastosMenores {
            get {
                return this.TopeGastosMenoresField;
            }
            set {
                if ((this.TopeGastosMenoresField.Equals(value) != true)) {
                    this.TopeGastosMenoresField = value;
                    this.RaisePropertyChanged("TopeGastosMenores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeGubernamental {
            get {
                return this.TopeGubernamentalField;
            }
            set {
                if ((this.TopeGubernamentalField.Equals(value) != true)) {
                    this.TopeGubernamentalField = value;
                    this.RaisePropertyChanged("TopeGubernamental");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeNotaCredito {
            get {
                return this.TopeNotaCreditoField;
            }
            set {
                if ((this.TopeNotaCreditoField.Equals(value) != true)) {
                    this.TopeNotaCreditoField = value;
                    this.RaisePropertyChanged("TopeNotaCredito");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeNotaDebito {
            get {
                return this.TopeNotaDebitoField;
            }
            set {
                if ((this.TopeNotaDebitoField.Equals(value) != true)) {
                    this.TopeNotaDebitoField = value;
                    this.RaisePropertyChanged("TopeNotaDebito");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeProveedorInformal {
            get {
                return this.TopeProveedorInformalField;
            }
            set {
                if ((this.TopeProveedorInformalField.Equals(value) != true)) {
                    this.TopeProveedorInformalField = value;
                    this.RaisePropertyChanged("TopeProveedorInformal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeRegimenEspecial {
            get {
                return this.TopeRegimenEspecialField;
            }
            set {
                if ((this.TopeRegimenEspecialField.Equals(value) != true)) {
                    this.TopeRegimenEspecialField = value;
                    this.RaisePropertyChanged("TopeRegimenEspecial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TopeRegistroUnicoIngreso {
            get {
                return this.TopeRegistroUnicoIngresoField;
            }
            set {
                if ((this.TopeRegistroUnicoIngresoField.Equals(value) != true)) {
                    this.TopeRegistroUnicoIngresoField = value;
                    this.RaisePropertyChanged("TopeRegistroUnicoIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VentaActual {
            get {
                return this.VentaActualField;
            }
            set {
                if ((this.VentaActualField.Equals(value) != true)) {
                    this.VentaActualField = value;
                    this.RaisePropertyChanged("VentaActual");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoComprobante", Namespace="http://schemas.datacontract.org/2004/07/SaleDomains")]
    public enum TipoComprobante : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditoFiscal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumidorFinal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotaDebito = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotaCredito = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProveedorInformal = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnicoIngreso = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GastosMenores = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegimenEspecial = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gubernamental = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference5.ISalesServer")]
    public interface ISalesServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetDomain", ReplyAction="http://tempuri.org/ISalesServer/GetDomainResponse")]
        ServerTester.ServiceReference5.DominioVenta GetDomain(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetDomain", ReplyAction="http://tempuri.org/ISalesServer/GetDomainResponse")]
        System.Threading.Tasks.Task<ServerTester.ServiceReference5.DominioVenta> GetDomainAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextVenta", ReplyAction="http://tempuri.org/ISalesServer/GetNextVentaResponse")]
        long GetNextVenta(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextVenta", ReplyAction="http://tempuri.org/ISalesServer/GetNextVentaResponse")]
        System.Threading.Tasks.Task<long> GetNextVentaAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextVenta", ReplyAction="http://tempuri.org/ISalesServer/SetNextVentaResponse")]
        bool SetNextVenta(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextVenta", ReplyAction="http://tempuri.org/ISalesServer/SetNextVentaResponse")]
        System.Threading.Tasks.Task<bool> SetNextVentaAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextCompra", ReplyAction="http://tempuri.org/ISalesServer/GetNextCompraResponse")]
        long GetNextCompra(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextCompra", ReplyAction="http://tempuri.org/ISalesServer/GetNextCompraResponse")]
        System.Threading.Tasks.Task<long> GetNextCompraAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextCompra", ReplyAction="http://tempuri.org/ISalesServer/SetNextCompraResponse")]
        bool SetNextCompra(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextCompra", ReplyAction="http://tempuri.org/ISalesServer/SetNextCompraResponse")]
        System.Threading.Tasks.Task<bool> SetNextCompraAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextPedido", ReplyAction="http://tempuri.org/ISalesServer/GetNextPedidoResponse")]
        long GetNextPedido(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextPedido", ReplyAction="http://tempuri.org/ISalesServer/GetNextPedidoResponse")]
        System.Threading.Tasks.Task<long> GetNextPedidoAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextPedido", ReplyAction="http://tempuri.org/ISalesServer/SetNextPedidoResponse")]
        bool SetNextPedido(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextPedido", ReplyAction="http://tempuri.org/ISalesServer/SetNextPedidoResponse")]
        System.Threading.Tasks.Task<bool> SetNextPedidoAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextOrden", ReplyAction="http://tempuri.org/ISalesServer/GetNextOrdenResponse")]
        long GetNextOrden(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextOrden", ReplyAction="http://tempuri.org/ISalesServer/GetNextOrdenResponse")]
        System.Threading.Tasks.Task<long> GetNextOrdenAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextOrden", ReplyAction="http://tempuri.org/ISalesServer/SetNextOrdenResponse")]
        bool SetNextOrden(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextOrden", ReplyAction="http://tempuri.org/ISalesServer/SetNextOrdenResponse")]
        System.Threading.Tasks.Task<bool> SetNextOrdenAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextPago", ReplyAction="http://tempuri.org/ISalesServer/GetNextPagoResponse")]
        long GetNextPago(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextPago", ReplyAction="http://tempuri.org/ISalesServer/GetNextPagoResponse")]
        System.Threading.Tasks.Task<long> GetNextPagoAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextPago", ReplyAction="http://tempuri.org/ISalesServer/SetNextPagoResponse")]
        bool SetNextPago(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextPago", ReplyAction="http://tempuri.org/ISalesServer/SetNextPagoResponse")]
        System.Threading.Tasks.Task<bool> SetNextPagoAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextCobro", ReplyAction="http://tempuri.org/ISalesServer/GetNextCobroResponse")]
        long GetNextCobro(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextCobro", ReplyAction="http://tempuri.org/ISalesServer/GetNextCobroResponse")]
        System.Threading.Tasks.Task<long> GetNextCobroAsync(string nameDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextCobro", ReplyAction="http://tempuri.org/ISalesServer/SetNextCobroResponse")]
        bool SetNextCobro(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextCobro", ReplyAction="http://tempuri.org/ISalesServer/SetNextCobroResponse")]
        System.Threading.Tasks.Task<bool> SetNextCobroAsync(string nameDominio, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/CreateDominio", ReplyAction="http://tempuri.org/ISalesServer/CreateDominioResponse")]
        bool CreateDominio(string nameDominio, string parteFija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/CreateDominio", ReplyAction="http://tempuri.org/ISalesServer/CreateDominioResponse")]
        System.Threading.Tasks.Task<bool> CreateDominioAsync(string nameDominio, string parteFija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextComprobante", ReplyAction="http://tempuri.org/ISalesServer/GetNextComprobanteResponse")]
        string GetNextComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/GetNextComprobante", ReplyAction="http://tempuri.org/ISalesServer/GetNextComprobanteResponse")]
        System.Threading.Tasks.Task<string> GetNextComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextComprobante", ReplyAction="http://tempuri.org/ISalesServer/SetNextComprobanteResponse")]
        bool SetNextComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetNextComprobante", ReplyAction="http://tempuri.org/ISalesServer/SetNextComprobanteResponse")]
        System.Threading.Tasks.Task<bool> SetNextComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long next);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetTopeComprobante", ReplyAction="http://tempuri.org/ISalesServer/SetTopeComprobanteResponse")]
        bool SetTopeComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesServer/SetTopeComprobante", ReplyAction="http://tempuri.org/ISalesServer/SetTopeComprobanteResponse")]
        System.Threading.Tasks.Task<bool> SetTopeComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long top);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesServerChannel : ServerTester.ServiceReference5.ISalesServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesServerClient : System.ServiceModel.ClientBase<ServerTester.ServiceReference5.ISalesServer>, ServerTester.ServiceReference5.ISalesServer {
        
        public SalesServerClient() {
        }
        
        public SalesServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServerTester.ServiceReference5.DominioVenta GetDomain(string nameDominio) {
            return base.Channel.GetDomain(nameDominio);
        }
        
        public System.Threading.Tasks.Task<ServerTester.ServiceReference5.DominioVenta> GetDomainAsync(string nameDominio) {
            return base.Channel.GetDomainAsync(nameDominio);
        }
        
        public long GetNextVenta(string nameDominio) {
            return base.Channel.GetNextVenta(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextVentaAsync(string nameDominio) {
            return base.Channel.GetNextVentaAsync(nameDominio);
        }
        
        public bool SetNextVenta(string nameDominio, long next) {
            return base.Channel.SetNextVenta(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextVentaAsync(string nameDominio, long next) {
            return base.Channel.SetNextVentaAsync(nameDominio, next);
        }
        
        public long GetNextCompra(string nameDominio) {
            return base.Channel.GetNextCompra(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextCompraAsync(string nameDominio) {
            return base.Channel.GetNextCompraAsync(nameDominio);
        }
        
        public bool SetNextCompra(string nameDominio, long next) {
            return base.Channel.SetNextCompra(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextCompraAsync(string nameDominio, long next) {
            return base.Channel.SetNextCompraAsync(nameDominio, next);
        }
        
        public long GetNextPedido(string nameDominio) {
            return base.Channel.GetNextPedido(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextPedidoAsync(string nameDominio) {
            return base.Channel.GetNextPedidoAsync(nameDominio);
        }
        
        public bool SetNextPedido(string nameDominio, long next) {
            return base.Channel.SetNextPedido(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextPedidoAsync(string nameDominio, long next) {
            return base.Channel.SetNextPedidoAsync(nameDominio, next);
        }
        
        public long GetNextOrden(string nameDominio) {
            return base.Channel.GetNextOrden(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextOrdenAsync(string nameDominio) {
            return base.Channel.GetNextOrdenAsync(nameDominio);
        }
        
        public bool SetNextOrden(string nameDominio, long next) {
            return base.Channel.SetNextOrden(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextOrdenAsync(string nameDominio, long next) {
            return base.Channel.SetNextOrdenAsync(nameDominio, next);
        }
        
        public long GetNextPago(string nameDominio) {
            return base.Channel.GetNextPago(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextPagoAsync(string nameDominio) {
            return base.Channel.GetNextPagoAsync(nameDominio);
        }
        
        public bool SetNextPago(string nameDominio, long next) {
            return base.Channel.SetNextPago(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextPagoAsync(string nameDominio, long next) {
            return base.Channel.SetNextPagoAsync(nameDominio, next);
        }
        
        public long GetNextCobro(string nameDominio) {
            return base.Channel.GetNextCobro(nameDominio);
        }
        
        public System.Threading.Tasks.Task<long> GetNextCobroAsync(string nameDominio) {
            return base.Channel.GetNextCobroAsync(nameDominio);
        }
        
        public bool SetNextCobro(string nameDominio, long next) {
            return base.Channel.SetNextCobro(nameDominio, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextCobroAsync(string nameDominio, long next) {
            return base.Channel.SetNextCobroAsync(nameDominio, next);
        }
        
        public bool CreateDominio(string nameDominio, string parteFija) {
            return base.Channel.CreateDominio(nameDominio, parteFija);
        }
        
        public System.Threading.Tasks.Task<bool> CreateDominioAsync(string nameDominio, string parteFija) {
            return base.Channel.CreateDominioAsync(nameDominio, parteFija);
        }
        
        public string GetNextComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo) {
            return base.Channel.GetNextComprobante(nameDominio, tipo);
        }
        
        public System.Threading.Tasks.Task<string> GetNextComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo) {
            return base.Channel.GetNextComprobanteAsync(nameDominio, tipo);
        }
        
        public bool SetNextComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long next) {
            return base.Channel.SetNextComprobante(nameDominio, tipo, next);
        }
        
        public System.Threading.Tasks.Task<bool> SetNextComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long next) {
            return base.Channel.SetNextComprobanteAsync(nameDominio, tipo, next);
        }
        
        public bool SetTopeComprobante(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long top) {
            return base.Channel.SetTopeComprobante(nameDominio, tipo, top);
        }
        
        public System.Threading.Tasks.Task<bool> SetTopeComprobanteAsync(string nameDominio, ServerTester.ServiceReference5.TipoComprobante tipo, long top) {
            return base.Channel.SetTopeComprobanteAsync(nameDominio, tipo, top);
        }
    }
}
